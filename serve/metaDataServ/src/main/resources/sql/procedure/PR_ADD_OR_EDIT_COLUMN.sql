DROP PROCEDURE IF EXISTS PR_ADD_OR_EDIT_COLUMN;
DELIMITER //
/** 
	新增或编辑字段
		V_TABLE_NAME 表名
		V_COL_NAME 字段名
		V_COL_DATA_TYPE 数据类型
		V_COL_LENGTH 字段长度
		V_COL_ACCURACY 字段精度
		V_COL_DEFAULT 默认值
		V_COL_REMARK 备注
*/
CREATE PROCEDURE PR_ADD_OR_EDIT_COLUMN(
	IN V_TABLE_NAME VARCHAR(40),
    IN V_COL_NAME VARCHAR(30),
    IN V_COL_DATA_TYPE VARCHAR(20),
    IN V_COL_LENGTH BIGINT,
    IN V_COL_ACCURACY BIGINT,
	IN V_COL_DEFAULT TEXT,
	IN V_COL_REMARK TEXT
)
BEGIN
	-- 声名变量
 	DECLARE V_COUNT INT;
	DECLARE V_OLD_COL_ACCURACY INT;
	DECLARE V_MAX_INT_LENGTH INT;
    DECLARE V_COL_FINAL_SCALE VARCHAR(20);
	DECLARE V_COL_DEFAULT_SQL TEXT;
  
	SET V_COL_FINAL_SCALE = '';
	IF V_COL_LENGTH IS NOT NULL THEN
		SET V_COL_FINAL_SCALE = CONCAT('(', V_COL_LENGTH);
		-- 如果字段为decimal类型时，组装长度和精度
		IF V_COL_DATA_TYPE = 'decimal' THEN
			SET V_COL_FINAL_SCALE = CONCAT(V_COL_FINAL_SCALE, ",", V_COL_ACCURACY);
		END IF;
		SET V_COL_FINAL_SCALE = CONCAT(V_COL_FINAL_SCALE, ')');
	END IF;
	
	SET V_COL_DEFAULT_SQL = '';
	-- 默认值为空时，不设置默认值
	IF V_COL_DEFAULT != '' AND V_COL_DEFAULT IS NOT NULL THEN
		IF V_COL_DATA_TYPE = 'varchar' OR V_COL_DATA_TYPE = 'text' OR V_COL_DATA_TYPE = 'longtext' THEN
			SET V_COL_DEFAULT_SQL = CONCAT("DEFAULT '", V_COL_DEFAULT, "'");
		ELSE
			SET V_COL_DEFAULT_SQL = CONCAT("DEFAULT ", V_COL_DEFAULT);
		END IF;
	END IF;
  
    -- 查询表是否存在
 	SELECT COUNT(1) INTO V_COUNT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = V_TABLE_NAME;
	IF V_COUNT = 1 THEN
		-- 查询字段列是否存在
		SELECT COUNT(1) INTO V_COUNT FROM INFORMATION_SCHEMA.COLUMNS  WHERE TABLE_NAME = V_TABLE_NAME AND COLUMN_NAME = V_COL_NAME;
		-- 字段不存在则新增字段
		IF V_COUNT = 0 THEN
			SET @V_SQL = CONCAT(" ALTER TABLE ", V_TABLE_NAME, " ADD COLUMN ", V_COL_NAME, " ", V_COL_DATA_TYPE, V_COL_FINAL_SCALE, " ", V_COL_DEFAULT_SQL, " COMMENT '", V_COL_REMARK, "'");
			PREPARE sqlStmt FROM @V_SQL;
			EXECUTE sqlStmt;
		ELSE
		-- 字段存在，修改字段
			IF V_COL_DATA_TYPE = 'decimal' THEN
				-- 查询decimail类型，在当前表中的最大长度
				SELECT numeric_scale INTO V_OLD_COL_ACCURACY FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = V_TABLE_NAME AND COLUMN_NAME = V_COL_NAME;
				SET @V_SQL = CONCAT(" SELECT MAX(LENGTH(", V_COL_NAME, ")) INTO @V_MAX_INT_LENGTH FROM ", V_TABLE_NAME);
				PREPARE sqlStmt FROM @V_SQL;
				EXECUTE sqlStmt;
				DEALLOCATE PREPARE sqlStmt;
				SET V_MAX_INT_LENGTH = @V_MAX_INT_LENGTH - V_OLD_COL_ACCURACY - 1;
				IF V_COL_LENGTH - V_COL_ACCURACY < V_MAX_INT_LENGTH THEN
					SELECT CONCAT("表", V_TABLE_NAME, "，列", V_COL_NAME, "类型为", V_OLD_COL_TYPE, "表中最大整数长度为", V_MAX_INT_LENGTH, "，长度不足") ERR;
				ELSE
					SET @V_SQL = CONCAT(" ALTER TABLE ", V_TABLE_NAME, " MODIFY COLUMN ", V_COL_NAME, " ", V_COL_DATA_TYPE, V_COL_FINAL_SCALE, " ", V_COL_DEFAULT_SQL, " COMMENT '", V_COL_REMARK, "'");
					PREPARE sqlStmt FROM @V_SQL;
					EXECUTE sqlStmt;
				END IF;
			ELSE 			
				SET @V_SQL = CONCAT(" ALTER TABLE ", V_TABLE_NAME, " MODIFY COLUMN ", V_COL_NAME, " ", V_COL_DATA_TYPE, V_COL_FINAL_SCALE, " ", V_COL_DEFAULT_SQL, " COMMENT '", V_COL_REMARK, "'");
				PREPARE sqlStmt FROM @V_SQL;
				EXECUTE sqlStmt;
			END IF;
        END IF;    
    END IF;
END;
//
DELIMITER ;
